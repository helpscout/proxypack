const ProxyServer = require('./proxyServer.js')

function ProxyPackPlugin({ browser, domain, externalMappings, mappings }) {
  this.proxyServer = new ProxyServer({
    browser,
    domain,
    externalMappings,
    mappings,
  })
}

ProxyPackPlugin.prototype.apply = function(compiler) {
  compiler.plugin(
    'emit',
    function(compilation, callback) {
      const files = {}
      // Explore each chunk (build output):
      compilation.chunks.forEach(function(chunk) {
        // Explore each asset filename generated by the chunk:
        chunk.files.forEach(function(filename) {
          // Get the asset source for each file generated by the chunk:
          files[filename] = compilation.assets[filename].source()
        })
      })
      this.proxyServer.updateWebpackAssets(files)
      callback()
    }.bind(this),
  )
}

module.exports = ProxyPackPlugin
